import net.fabricmc.loom.task.RemapJarTask

plugins {
    id 'fabric-loom' version '1.7.1'
    id 'maven-publish'
}

apply plugin: 'fabric-loom'

sourceCompatibility = JavaVersion.VERSION_21
targetCompatibility = JavaVersion.VERSION_21

archivesBaseName = project.archives_base_name
version = project.minecraft_version + '-' + project.mod_version
group = project.maven_group

sourceSets {
    api{
        java {
            compileClasspath += main.compileClasspath
        }
    }
    main {
        java {
            compileClasspath += api.output
            runtimeClasspath += api.output
        }
    }
}

repositories {
    allprojects {
        repositories {
            maven { url 'https://jitpack.io' }
        }
    }
    maven { //AutoConfig
        name = "Shedaniel's Maven"
        url = "https://maven.shedaniel.me/"
    }
    exclusiveContent {
        forRepository {
            maven {
                name = "Modrinth"
                url = "https://api.modrinth.com/maven"
            }
        }
        filter {
            includeGroup "maven.modrinth"
        }
    }
}

loom {
    accessWidenerPath = file("src/main/resources/moreculling.accesswidener")
}

dependencies {
    //to change the versions see the gradle.properties file
    minecraft "com.mojang:minecraft:${project.minecraft_version}"
    mappings loom.officialMojangMappings()
    modImplementation "net.fabricmc:fabric-loader:${project.loader_version}"

    // Conditional-Mixins
    modImplementation "com.github.Fallen-Breath:conditional-mixin:${project.conditional_mixins_version}"
    include "com.github.Fallen-Breath:conditional-mixin:${project.conditional_mixins_version}"

    // Fabric Compat
    modImplementation "net.fabricmc.fabric-api:fabric-api:${project.fabric_version}"

    // Sodium Compat
    modImplementation "maven.modrinth:sodium:${project.sodium_version}"
    // ^ Change to `modCompileOnly` to test without sodium

    //ModMenu Compat
    modImplementation "maven.modrinth:modmenu:${project.modmenu_version}"

    //AutoConfig
    //modCompileOnly "me.shedaniel.cloth:cloth-config-fabric:${project.cloth_config_version}"
    modApi("me.shedaniel.cloth:cloth-config-fabric:${project.cloth_config_version}") {
        exclude(group: "net.fabricmc.fabric-api")
    }

    include(implementation(annotationProcessor("com.github.bawnorton.mixinsquared:mixinsquared-fabric:${project.mixinsquared_version}")))
}

processResources {
    inputs.property "version", project.version

    filesMatching("fabric.mod.json") {
        expand "version": project.mod_version
    }
}

tasks.withType(AbstractArchiveTask).configureEach {
    reproducibleFileOrder = true
    preserveFileTimestamps = false
}

tasks.withType(JavaCompile).configureEach {
    it.options.encoding = "UTF-8"
    it.options.release = 21
}

tasks.withType(Jar).configureEach {
    from "LICENSE"
    from sourceSets.api.output
}

tasks.register('apiJar', Jar) {
    archiveClassifier.set("api-dev")
    from sourceSets.api.output
}

tasks.register('remapApiJar', RemapJarTask) {
    dependsOn apiJar
    archiveClassifier.set("api")

    input = apiJar.archiveFile.get().asFile
    addNestedDependencies = false
}
build.dependsOn remapApiJar

runClient.doFirst {
    args = ['--username', "PR0CESS", '--uuid', UUID.randomUUID()]
}

// configure the maven publication
publishing {
    publications {
        main (MavenPublication) {
            artifactId "moreculling"
            artifact(remapJar)
        }

        api (MavenPublication) {
            artifactId "moreculling-api"
            artifact(remapApiJar)
        }
    }
}

build.dependsOn remapApiJar